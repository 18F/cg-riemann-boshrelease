(def cf-data
  "Calculate total available memory"
  (where (service #"<%= p('riemann.cf.name') %>.DEA.*available_memory_ratio")
    (with :host "DEA"
      (coalesce 30
        (smap folds/mean
          (with {:host nil :service "<%= p('riemann.cf.name') %>.hybris.available_memory_ratio"} reinject)
        )
      )
    )
  )
)

(def cf-measure
  "Check available memory ratio"
  (where (and (service "<%= p('riemann.cf.name') %>.hybris.available_memory_ratio") (not (nil? metric)))
    (split
      (> metric <%= p('riemann.cf.memory_ratio_alert') %>)  (with :state "critical" alert)
                      (with :state "ok" alert)
    )
  )
)

(def cf-health
  "Check health"
  (where (service #"<%= p('riemann.cf.name') %>.*healthy")
    (where (state "ok") alert)
    (where (state "expired") (with :state "critical" alert))
  )
)
