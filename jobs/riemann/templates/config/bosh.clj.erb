(def bosh-hm
  "BOSH Health data"

  (where (and (not (state "expired")) (not (nil? metric)))
    ; Check VM health
    (where (service #".*system_healthy")
      (split
        (not= metric 1) (with :state "critical" alert)
                          (with :state "ok"       alert)
      )
    )

    (where (service #".*system_mem_percent")
      (split
        (> metric 90) (with :state "critical" alert)
        (> metric 80) (with :state "warning" alert)
                        (with :state "ok" alert)
      )
    )
    (where (service #".*system_disk_ephemeral_percent")
      (split
        (> metric 90) (with :state "critical" alert)
        (> metric 80) (with :state "warning" alert)
                        (with :state "ok" alert)
      )
    )
    (where (service #".*system_disk_system_percent")
      (split
        (> metric 90) (with :state "critical" alert)
        (> metric 80) (with :state "warning" alert)
                        (with :state "ok" alert)
      )
    )
    (where (service #".*system_swap_percent")
      (split
        (> metric 90) (with :state "critical" alert)
        (> metric 80) (with :state "warning" alert)
                        (with :state "ok" alert)
      )
    )
  ) ; where
) ;def
