(streams

  ; ########### Repl Status ###########
  (where (service "mongodb rs myState")
    (splitp = metric
      3.0  (with :state "warning" alert) ; RECOVERING(3)
      4.0  (with :state "critical" alert) ; FATAL(4)
      6.0  (with :state "critical" alert) ; UNKNOWN(6)
      8.0  (with :state "critical" alert) ; DOWN(8)
      10.0 (with :state "critical" alert) ; SHUNNED(10)
           (with :state "ok" alert)))

  ; ########### Connections ###########
  (where (service "mongodb server connections current")
    (let [nbconns 500] ; normal amount of connections
      (split
        (> metric (* 2.0 nbconns)) (with :state "critical" alert) ; count has double vs. normal
        (> metric (* 1.5 nbconns)) (with :state "warning" alert) ; 50% increase from normal
        (with :state "ok" alert))))

  ; ########### Lock % ###########
  (where (service "mongodb server globalLock lockPercentage")
    (split
      (> metric 80) (with :state "critical" alert) ; 80% > normal
      (> metric 20) (with :state "warning" alert) ; 20% > normal
      (with :state "ok" alert)))

  ; ########### Virtual Memory ###########
  (where (service "mongodb server mem nonMappedVirtualMemory")
    (split
      (> metric 3) (with :state "critical" alert) ; virtual 3x mapped ?
      (> metric 2.5) (with :state "warning" alert)  ; virtual 2x mapped ?
      (with :state "ok" alert)))

  ; ########### Journal Writes ###########
  (where (service "mongodb server dur commitsInWriteLock")
    (let [nbwrites 50] ; normal amount of journal write
      (split
        (> metric (* 2 nbwrites)) (with :state "critical" alert)
        (> metric nbwrites) (with :state "warning" alert)
        (with :state "ok" alert))))


  ;alert ; this alert is never called because we should re-index the event instead of calling directly alert in each conditions
)
