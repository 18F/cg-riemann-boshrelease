; -*- mode: clojure; -*-
; vim: filetype=clojure

(include "hipchat.clj")
(include "mailer.clj")
(include "alert.clj")
(include "graphite.clj")
(include "cf.clj")

; ########### Configurations #############

(logging/init {:file "/var/log/riemann/riemann.log"})

(let [host "0.0.0.0"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host})
  (graphite-server {:host host}))


; Expire old events from the index every 30 seconds.
(periodically-expire 30)


(let [index (index)
      graph (async-queue! :graphite {:queue-size 1000} graph)]
  (streams
    index
    ; Check CF events
    (where (service #"<%= p('riemann.cf.name') %>.*")
      cf-data
      cf-measure
      cf-health)



    ; Calculate an overall rate of events.
    (with {:metric 1 :host nil :state "ok" :service "events/sec"}
      (rate 5 index))


    ; Send to graphite
    graph

    alert

  )
  (include "mongodb.clj")
)
